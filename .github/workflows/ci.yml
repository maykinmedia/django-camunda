name: Run CI

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  CAMUNDA_API_BASE_URL: http://localhost:8080/engine-rest/
  CAMUNDA_USER: demo
  CAMUNDA_PASSWORD: demo

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.10', '3.11', '3.12']
        django: ['4.2', '5.0']

    name: Run the test suite (Python ${{ matrix.python }}, Django ${{ matrix.django }})

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Bring up Camunda instance with docker-compose
        run: docker-compose -f docker-compose.camunda.yml up -d
        working-directory: ./docker

      - name: Install dependencies
        run: pip install tox tox-gh-actions

      - name: Wait for Camunda to be up
        run: |
          endpoint="${CAMUNDA_API_BASE_URL}version"
          version=""

          until [ $version ]; do
            echo "Checking if Camunda at ${CAMUNDA_API_BASE_URL} is up..."
            version=$(curl -u ${CAMUNDA_USER}:${CAMUNDA_PASSWORD} "$endpoint" -s | jq -r ".version")
            sleep 2
          done

          echo "Running Camunda $version"

      - name: Run tests
        run: tox
        env:
          PYTHON_VERSION: ${{ matrix.python }}
          DJANGO: ${{ matrix.django }}

      - name: Publish coverage report
        uses: codecov/codecov-action@v3
        # TODO
        # with:
        #   token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs: tests

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build sdist and wheel
        run: |
          pip install pip setuptools wheel --upgrade
          python setup.py sdist bdist_wheel

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
